name: .NET

on:
  push:

jobs:
  api-core:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    # Add NuGet Sources

    - name: Create Local NuGet Directory
      run: mkdir ~/nuget

    - name: Add Local Nuget Source
      run: dotnet nuget add source ~/nuget

    - name: Add GGroupp NuGet Source
      run: >
        dotnet nuget add source ${{ secrets.GG_NUGET_SOURCE_URL }}
        -n ggroupp -u ${{ secrets.GG_NUGET_SOURCE_USER_NAME }}
        -p ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --store-password-in-clear-text

    # Api.Core.DbEntity

    - name: Restore Api.Core.DbEntity
      run: dotnet restore ./src/*/*/DbEntity.csproj

    - name: Build Api.Core.DbEntity
      run: dotnet build ./src/*/*/DbEntity.csproj --no-restore  -c Release

    - name: Pack Api.Core.DbEntity
      run: dotnet pack ./src/*/*/DbEntity.csproj --no-restore -o ~/nuget  -c Release

    # Api.Core.DbEntity.Test

    - name: Restore Api.Core.DbEntity.Test
      run: dotnet restore ./src/*/*/DbEntity.Test.csproj

    - name: Test Api.Core.DbEntity.Test
      run: dotnet test ./src/*/*/DbEntity.Test.csproj --no-restore  -c Release

    # Api.Core.DbParameter

    - name: Restore Api.Core.DbParameter
      run: dotnet restore ./src/*/*/DbParameter.csproj

    - name: Build Api.Core.DbParameter
      run: dotnet build ./src/*/*/DbParameter.csproj --no-restore  -c Release

    - name: Pack Api.Core.DbParameter
      run: dotnet pack ./src/*/*/DbParameter.csproj --no-restore -o ~/nuget  -c Release

    # Api.Core.DbQuery

    - name: Restore Api.Core.DbQuery
      run: dotnet restore ./src/*/*/DbQuery.csproj

    - name: Build Api.Core.DbQuery
      run: dotnet build ./src/*/*/DbQuery.csproj --no-restore  -c Release

    - name: Pack Api.Core.DbQuery
      run: dotnet pack ./src/*/*/DbQuery.csproj --no-restore -o ~/nuget  -c Release

    # Api.Core.DbQuery.Test

    - name: Restore Api.Core.DbQuery.Test
      run: dotnet restore ./src/*/*/DbQuery.Test.csproj

    - name: Test Api.Core.DbQuery.Test
      run: dotnet test ./src/*/*/DbQuery.Test.csproj --no-restore  -c Release

    # Api.Core.DbRequests

    - name: Restore Api.Core.DbRequests
      run: dotnet restore ./src/*/*/DbRequests.csproj

    - name: Build Api.Core.DbRequests
      run: dotnet build ./src/*/*/DbRequests.csproj --no-restore  -c Release

    - name: Pack Api.Core.DbRequests
      run: dotnet pack ./src/*/*/DbRequests.csproj --no-restore -o ~/nuget  -c Release

    # Api.Core.DbRequests.Test

    - name: Restore Api.Core.DbRequests.Test
      run: dotnet restore ./src/*/*/DbRequests.Test.csproj

    - name: Test Api.Core.DbRequests.Test
      run: dotnet test ./src/*/*/DbRequests.Test.csproj --no-restore  -c Release

    # Push

    - name: Push Packages
      if: ${{ github.ref == 'refs/heads/main' }}
      run: >
        dotnet nuget push "../../../nuget/*.nupkg"
        -s ${{ secrets.GG_NUGET_SOURCE_URL }}
        -k ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --skip-duplicate

  api-core-generator:
    needs: api-core
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

     # Add NuGet Sources

    - name: Create Local NuGet Directory
      run: mkdir ~/nuget

    - name: Add Local Nuget Source
      run: dotnet nuget add source ~/nuget

    - name: Add GGroupp NuGet Source
      run: >
        dotnet nuget add source ${{ secrets.GG_NUGET_SOURCE_URL }}
        -n ggroupp -u ${{ secrets.GG_NUGET_SOURCE_USER_NAME }}
        -p ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --store-password-in-clear-text

    # DbEntity.Generator

    - name: Restore DbEntity.Generator
      run: dotnet restore ./src/*/*/DbEntity.Generator.csproj

    - name: Build DbEntity.Generator
      run: dotnet build ./src/*/*/DbEntity.Generator.csproj --no-restore  -c Release

    - name: Pack DbEntity.Generator
      run: dotnet pack ./src/*/*/DbEntity.Generator.csproj --no-restore -o ~/nuget  -c Release

    # DbEntity.Generator.Test

    - name: Restore DbEntity.Generator.Test
      run: dotnet restore ./src/*/*/DbEntity.Generator.Test.csproj

    - name: Test DbEntity.Generator.Test
      run: dotnet test ./src/*/*/DbEntity.Generator.Test.csproj --no-restore  -c Release

    # Push

    - name: Push Packages
      if: ${{ github.ref == 'refs/heads/main' }}
      run: >
        dotnet nuget push "../../../nuget/*.nupkg"
        -s ${{ secrets.GG_NUGET_SOURCE_URL }}
        -k ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --skip-duplicate

  api-abstractions:
    needs: api-core
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

     # Add NuGet Sources

    - name: Create Local NuGet Directory
      run: mkdir ~/nuget

    - name: Add Local Nuget Source
      run: dotnet nuget add source ~/nuget

    - name: Add GGroupp NuGet Source
      run: >
        dotnet nuget add source ${{ secrets.GG_NUGET_SOURCE_URL }}
        -n ggroupp -u ${{ secrets.GG_NUGET_SOURCE_USER_NAME }}
        -p ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --store-password-in-clear-text

    # Api.Abstractions.ExecuteNonQuery

    - name: Restore Api.Abstractions.ExecuteNonQuery
      run: dotnet restore ./src/*/*/Abstractions.ExecuteNonQuery.csproj

    - name: Build Api.Abstractions.ExecuteNonQuery
      run: dotnet build ./src/*/*/Abstractions.ExecuteNonQuery.csproj --no-restore  -c Release

    - name: Pack Api.Abstractions.ExecuteNonQuery
      run: dotnet pack ./src/*/*/Abstractions.ExecuteNonQuery.csproj --no-restore -o ~/nuget  -c Release

    # Api.Abstractions.QueryEntity

    - name: Restore Api.Abstractions.QueryEntity
      run: dotnet restore ./src/*/*/Abstractions.QueryEntity.csproj

    - name: Build Api.Abstractions.QueryEntity
      run: dotnet build ./src/*/*/Abstractions.QueryEntity.csproj --no-restore  -c Release

    - name: Pack Api.Abstractions.QueryEntity
      run: dotnet pack ./src/*/*/Abstractions.QueryEntity.csproj --no-restore -o ~/nuget  -c Release

    # Api.Abstractions.QueryEntitySet

    - name: Restore Api.Abstractions.QueryEntitySet
      run: dotnet restore ./src/*/*/Abstractions.QueryEntitySet.csproj

    - name: Build Api.Abstractions.QueryEntitySet
      run: dotnet build ./src/*/*/Abstractions.QueryEntitySet.csproj --no-restore  -c Release

    - name: Pack Api.Abstractions.QueryEntitySet
      run: dotnet pack ./src/*/*/Abstractions.QueryEntitySet.csproj --no-restore -o ~/nuget  -c Release

    # Api.Abstractions

    - name: Restore Api.Abstractions
      run: dotnet restore ./src/api-abstractions/*/Abstractions.csproj

    - name: Build Api.Abstractions
      run: dotnet build ./src/api-abstractions/*/Abstractions.csproj --no-restore  -c Release

    - name: Pack Api.Abstractions
      run: dotnet pack ./src/api-abstractions/*/Abstractions.csproj --no-restore -o ~/nuget  -c Release

    # Push

    - name: Push Packages
      if: ${{ github.ref == 'refs/heads/main' }}
      run: >
        dotnet nuget push "../../../nuget/*.nupkg"
        -s ${{ secrets.GG_NUGET_SOURCE_URL }}
        -k ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --skip-duplicate

  api-provider:
    needs: api-core
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

     # Add NuGet Sources

    - name: Create Local NuGet Directory
      run: mkdir ~/nuget

    - name: Add Local Nuget Source
      run: dotnet nuget add source ~/nuget

    - name: Add GGroupp NuGet Source
      run: >
        dotnet nuget add source ${{ secrets.GG_NUGET_SOURCE_URL }}
        -n ggroupp -u ${{ secrets.GG_NUGET_SOURCE_USER_NAME }}
        -p ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --store-password-in-clear-text

    # Api.Provider.Abstractions

    - name: Restore Api.Provider.Abstractions
      run: dotnet restore ./src/api-provider/*/Abstractions.csproj

    - name: Build Api.Provider.Abstractions
      run: dotnet build ./src/api-provider/*/Abstractions.csproj --no-restore  -c Release

    - name: Pack Api.Provider.Abstractions
      run: dotnet pack ./src/api-provider/*/Abstractions.csproj --no-restore -o ~/nuget  -c Release

    # Api.Provider.Microsoft

    - name: Restore Api.Provider.Microsoft
      run: dotnet restore ./src/*/*/Microsoft.csproj

    - name: Build Api.Provider.Microsoft
      run: dotnet build ./src/*/*/Microsoft.csproj --no-restore  -c Release

    - name: Pack Api.Provider.Microsoft
      run: dotnet pack ./src/*/*/Microsoft.csproj --no-restore -o ~/nuget  -c Release

    # Api.Provider.Microsoft.Test

    - name: Restore Api.Provider.Microsoft.Test
      run: dotnet restore ./src/*/*/Microsoft.Test.csproj

    - name: Test Api.Provider.Microsoft.Test
      run: dotnet test ./src/*/*/Microsoft.Test.csproj --no-restore  -c Release

    # Push

    - name: Push Packages
      if: ${{ github.ref == 'refs/heads/main' }}
      run: >
        dotnet nuget push "../../../nuget/*.nupkg"
        -s ${{ secrets.GG_NUGET_SOURCE_URL }}
        -k ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --skip-duplicate

  api:
    needs: [api-abstractions, api-provider]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

     # Add NuGet Sources

    - name: Create Local NuGet Directory
      run: mkdir ~/nuget

    - name: Add Local Nuget Source
      run: dotnet nuget add source ~/nuget

    - name: Add GGroupp NuGet Source
      run: >
        dotnet nuget add source ${{ secrets.GG_NUGET_SOURCE_URL }}
        -n ggroupp -u ${{ secrets.GG_NUGET_SOURCE_USER_NAME }}
        -p ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --store-password-in-clear-text

    # Api

    - name: Restore Api
      run: dotnet restore ./src/*/*/Api.csproj

    - name: Build Api
      run: dotnet build ./src/*/*/Api.csproj --no-restore  -c Release

    - name: Pack Api
      run: dotnet pack ./src/*/*/Api.csproj --no-restore -o ~/nuget  -c Release

    # Api.Test

    - name: Restore Api.Test
      run: dotnet restore ./src/*/*/Api.Test.csproj

    - name: Test Api.Test
      run: dotnet test ./src/*/*/Api.Test.csproj --no-restore  -c Release

    # Push

    - name: Push Packages
      if: ${{ github.ref == 'refs/heads/main' }}
      run: >
        dotnet nuget push "../../../nuget/*.nupkg"
        -s ${{ secrets.GG_NUGET_SOURCE_URL }}
        -k ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --skip-duplicate